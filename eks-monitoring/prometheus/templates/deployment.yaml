apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-{{ .Values.environment }}
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.prometheus.replicaCount }}
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      serviceAccountName: {{ .Release.Name }}-sa
      securityContext:
        fsGroup: 65534
      containers:
        - name: prometheus
          image: "{{ .Values.prometheus.image.repository }}:{{ .Values.prometheus.image.tag }}"
          ports:
            - containerPort: 9090
          args:
            - "--config.file=/etc/prometheus/prometheus.yaml"
          volumeMounts:
            - name: {{ .Release.Name }}-config-volume
              mountPath: /etc/prometheus/
            - name: {{ .Release.Name }}-pv
              mountPath: /etc/prometheus/
          resources:
            limits:
              cpu: {{ .Values.prometheus.resources.limits.cpu }}
              memory: {{ .Values.prometheus.resources.limits.memory }}
            requests:
              cpu: {{ .Values.prometheus.resources.requests.cpu }}
              memory: {{ .Values.prometheus.resources.requests.memory }}
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 9090
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 9090
            initialDelaySeconds: 15
            periodSeconds: 20
            timeoutSeconds: 3
            failureThreshold: 5
      volumes:
        - name: {{ .Release.Name }}-config-volume
          configMap:
            name: {{ .Release.Name }}-config
        - name: {{ .Release.Name }}-pv
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-pvc