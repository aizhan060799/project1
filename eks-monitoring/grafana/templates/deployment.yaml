apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-{{ .Values.environment }}
  namespace: {{ .Values.namespace }}
  labels:
    app: grafana
    environment: "{{ .Values.environment }}"
spec:
  replicas: {{ .Values.grafana.replicaCount }}
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
        environment: "{{ .Values.environment }}"
    spec:
      serviceAccountName: {{ .Release.Name }}-sa
      securityContext:
        fsGroup: 472  
      containers:
      - name: grafana
        image: "{{ .Values.grafana.image.repository }}:{{ .Values.grafana.image.tag }}"
        ports:
          - containerPort: 3000
            name: http-grafana
            protocol: TCP
        volumeMounts:
          - mountPath: /var/lib/grafana
            name: {{ .Release.Name }}-pv
          - mountPath: /mnt/secrets-store  # Mount the secrets from the external provider here
            name: {{ .Release.Name }}-secrets
            readOnly: true
      volumes:
        - name: {{ .Release.Name }}-pv
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-pvc
        - name: {{ .Release.Name }}-secrets
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "aws-secrets-{{ .Values.environment }}-grafana"
      env:
        - name: GF_SECURITY_ADMIN_PASSWORD  
          valueFrom:
            secretKeyRef:
              name: {{ .Values.grafana.secrets.adminPasswordSecret }}
              key: admin-password